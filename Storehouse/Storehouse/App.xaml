<Application x:Class="Storehouse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <FontFamily x:Key="my_FontFamily">Segoe UI, Arial, Tahoma</FontFamily>

            <Style TargetType="Window">
                <Setter Property="Background" Value="White"/>
            </Style>
            
            <Style TargetType="Image">
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="StretchDirection" Value="DownOnly" />
                <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            </Style>

            <Style TargetType="Menu">
                <Setter Property="Background" Value="Transparent"/>
                </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="MenuItem">
                <Setter Property="Margin" Value="0,0,5,0"/>
                </Style>
            
            <Style
               
                TargetType="ComboBox">
                <Setter Property="FontFamily" Value="{StaticResource my_FontFamily}" />
                <Setter Property="Margin" Value="1,1,2,2" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="5,1" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
               
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>

            <Style x:Key="FormattedBorder" TargetType="Border">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="BorderBrush" Value="Silver" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="2" />
               
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />

            </Style>
            <Style
                TargetType="TextBox">
                <Setter Property="FontFamily" Value="{StaticResource my_FontFamily}" />
                <Setter Property="Margin" Value="1,1,3,3" />
                <Setter Property="BorderBrush" Value="Silver" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="MinHeight" Value="19" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>
            
            <Style TargetType="DataGrid">
                <Setter Property="IsReadOnly" Value="true"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="AlternatingRowBackground" Value="#FFEEFEFF"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="GridLinesVisibility" Value="None"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style TargetType="DataGridColumnHeader">

                <Setter Property="MinHeight" Value="25" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

            </Style>

            <Style TargetType="TabItem" >
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderThickness" Value="0,0,0,3" />
                        <Setter Property="Foreground" Value="DarkBlue" />
                        <Setter Property="FontWeight" Value="DemiBold"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="FontStretch" Value="Condensed" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Padding" Value="15,0,15,0" />
                
            </Style>

            <Style
                x:Key="VerticalSeparatorStyle"
                BasedOn="{StaticResource {x:Type Separator}}"
                TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="5,0" />
                <Setter Property="Background" Value="DarkBlue"/>
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <TransformCollection>
                                    <RotateTransform Angle="90" />
                                </TransformCollection>
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridCell}"
                   x:Key="DgrCellStyleSelectedRowTransparent">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="ButtonCross" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Image
                                Name="refreshIcon"
                                MinWidth="25"
                                Margin="-1,-1,1,1"
                                Source="Images/i16/cross-script.png"
                                Stretch="Uniform"
                                StretchDirection="DownOnly">
                                <Image.Effect>
                                    <DropShadowEffect
                                        Direction="{DynamicResource defaultShadowDirection}"
                                        Opacity="0.55"
                                        ShadowDepth="3" />
                                </Image.Effect>
                            </Image>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="refreshIcon" Property="Margin" Value="0,0,0,0" />
                                    <Setter TargetName="refreshIcon" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                Direction="{DynamicResource defaultShadowDirection}"
                                                Opacity="0.7"
                                                ShadowDepth="1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CircleBlueRightButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Image
                                Name="refreshIcon"
                                Margin="-1,-1,1,1"
                                Source="Images/i32/arrow_right.png"
                                Stretch="Uniform"
                                StretchDirection="DownOnly">
                                <Image.Effect>
                                    <DropShadowEffect
                                        Direction="{DynamicResource defaultShadowDirection}"
                                        Opacity="0.55"
                                        ShadowDepth="3" />
                                </Image.Effect>

                            </Image>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="refreshIcon" Property="Margin" Value="0,0,0,0" />
                                    <Setter TargetName="refreshIcon" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                Direction="{DynamicResource defaultShadowDirection}"
                                                Opacity="0.7"
                                                ShadowDepth="1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CircleBlueLeftButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Image
                                Name="refreshIcon"
                                Margin="-1,-1,1,1"
                                Source="Images/i32/arrow_left.png"
                                Stretch="Uniform"
                                StretchDirection="DownOnly">
                                <Image.Effect>
                                    <DropShadowEffect
                                        Direction="{DynamicResource defaultShadowDirection}"
                                        Opacity="0.55"
                                        ShadowDepth="3" />
                                </Image.Effect>
                            </Image>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="refreshIcon" Property="Margin" Value="0,0,0,0" />
                                    <Setter TargetName="refreshIcon" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                Direction="{DynamicResource defaultShadowDirection}"
                                                Opacity="0.7"
                                                ShadowDepth="1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>
